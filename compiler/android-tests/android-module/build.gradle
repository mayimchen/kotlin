// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {        
        classpath 'com.android.tools.build:gradle:3.5.3'
    }
}
apply plugin: 'com.android.application'

repositories {
    google()
    jcenter()
}

android {
    compileSdkVersion 26
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "org.jetbrains.kotlin.android.tests"
        minSdkVersion 19
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
        testApplicationId "org.jetbrains.kotlin.android.tests.gradle"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions { exclude 'META-INF/build.txt' }

    //TODO run under java 6, cause there is error on implicit 'stream' import in 'asWithMutable' test
    lintOptions {
        abortOnError false
    }

    compileOptions {
        incremental = false
    }

    dexOptions {
        dexInProcess false
        javaMaxHeapSize "1500m"
        maxProcessCount 4
        additionalParameters "--debug"
    }

    testOptions {
        resultsDir = "build/test/results"
    }


    flavorDimensions "box"

    productFlavors {
        common0 {
            dimension "box"
        }

        common1 {
            dimension "box"
        }

        common2 {
            dimension "box"
        }

        reflect0 {
            dimension "box"
        }

        jvm80 {
            dimension "box"
        }
    }

}

task jarTestFolders() {
    println "Jar folders..."
    new File("${projectDir}/libs/").listFiles().each { File file ->
        if (file.isDirectory() && file.name != "generated") {
            println "Jar '${file.name}' folder..."
            ant.jar(basedir: "libs/${file.name}/", destfile: "libs/" +  file.name  + ".jar")
        }
    }
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn jarTestFolders
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['kotlin-test.jar', 'kotlin-stdlib.jar'])
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'

    common0Implementation fileTree(dir: 'libs', include: ['common0.jar'])
    common1Implementation fileTree(dir: 'libs', include: ['common1.jar'])
    common2Implementation fileTree(dir: 'libs', include: ['common2.jar'])

    //reflect
    reflect0Implementation fileTree(dir: 'libs', include: ['kotlin-reflect.jar'])
    reflect0Implementation fileTree(dir: 'libs', include: ['reflect0.jar'])

    //JVM 8
    jvm80Implementation fileTree(dir: 'libs', include: ['jvm80.jar'])
}
